########################################################## \
############# MOONRAKER CONFIG FILE ###################### + --> To configure moonraker... :)
########################################################## /

[include moonraker/base.conf] # Do not remove this line

# This file is yours! Feel free to edit it in order to include all the needed
# things to configure moonraker to your machine. Also, keep in mind that it
# will not be erased when updating the config and it will be kept as you've set it.

# The moonraker/base.conf file should contain a good and sane default configuration,
# however, feel free to override its sections and adapt the config to your needs.

# ------------------------------------------------------------------------------------------


##### Exclude object pre-processing -------------------------------
## This can be deactivated in case you use an offline processor in your slicer
[include moonraker/exclude_object.conf]
# -----------------------------------------------------------------

##### Fluidd update management ------------------------------------
# [include moonraker/fluidd.conf]
# -----------------------------------------------------------------

##### Mainsail update management ----------------------------------
[include moonraker/mainsail.conf]
# -----------------------------------------------------------------

##### Auto Z calibration plugin update management -----------------
# [include moonraker/z_calibration.conf]
# -----------------------------------------------------------------

##### Spoolman plugin update management and server config ---------
# [include moonraker/spoolman.conf]
## If you want to change the default "localhost" IP, uncomment the two lines below to manually specify your Spoolman server IP
[spoolman]
#server: {secrets.net.spoolman_url}
server: https://spoolman.cashmedia.me
# -----------------------------------------------------------------

##### led_effect plugin update management  ------------------------
[include moonraker/led_effect.conf]
# -----------------------------------------------------------------

##### TMC Autotune plugin update management  ----------------------
# [include moonraker/tmc_autotune.conf]
# -----------------------------------------------------------------


##### Add your custom moonraker config customizations and overrides below this line...
# ------------------------------------------------------------------------------------
[authorization]
cors_domains:
    http://*.lan
    http://*.local
    https://my.mainsail.xyz
    http://my.mainsail.xyz
    https://app.fluidd.xyz
    http://app.fluidd.xyz
    {secrets.net.public_url}

[secrets]

[file_manager]
queue_gcode_uploads: True
enable_object_processing: True

[job_queue]
load_on_startup: True

[timelapse]
output_path: ~/printer_data/timelapse/
frame_path: /tmp/timelapse/printer

[power Printer]
type: gpio
# pin: gpio73 # orange pi
pin: gpio22 # rpi
initial_state: off
off_when_shutdown: True
on_when_job_queued: True
restart_klipper_when_powered: True
locked_while_printing: True
bound_services: klipper

## Klippain Shake&Tune automatic update management
[update_manager Klippain-ShakeTune]
type: git_repo
origin: https://github.com/Frix-x/klippain-shaketune.git
path: ~/klippain_shaketune
virtualenv: ~/klippy-env
requirements: requirements.txt
system_dependencies: system-dependencies.json
primary_branch: main
managed_services: klipper

[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
install_script: tools/install.sh

[update_manager timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services: klipper moonraker

[update_manager mainsail-config]
type: git_repo
primary_branch: master
path: ~/mainsail-config
origin: https://github.com/mainsail-crew/mainsail-config.git
managed_services: klipper

[update_manager sonar]
type: git_repo
path: ~/sonar
#origin: https://github.com/mainsail-crew/sonar.git
#primary_branch: main
origin: https://github.com/ammmze/mainsail-sonar.git
primary_branch: any-wlan-up
managed_services: sonar
install_script: tools/install.sh

[update_manager KlipperScreen]
type: git_repo
path: ~/KlipperScreen
origin: https://github.com/moggieuk/KlipperScreen-Happy-Hare-Edition.git
virtualenv: ~/.KlipperScreen-env
requirements: scripts/KlipperScreen-requirements.txt
system_dependencies: scripts/system-dependencies.json
managed_services: KlipperScreen

[update_manager trad_rack]
type: git_repo
path: ~/trad_rack_klippy_module
origin: https://github.com/Annex-Engineering/TradRack.git
primary_branch: main
managed_services: klipper

[update_manager belay]
type: git_repo
path: ~/belay_klippy_module
origin: https://github.com/Annex-Engineering/Belay.git
primary_branch: main
managed_services: klipper

[update_manager dockable_probe]
type: git_repo
path: ~/klipper-dockable-probe
origin: https://github.com/cloakedcode/klipper.git
primary_branch: work-annex-probe
managed_services: klipper

[update_manager happy-hare]
type: git_repo
path: ~/Happy-Hare
origin: https://github.com/moggieuk/Happy-Hare.git
primary_branch: main
install_script: install.sh
managed_services: klipper

# Happy hare processor
[mmu_server]
enable_file_preprocessor: True
enable_toolchange_next_pos: True
update_spoolman_location: True

[update_manager afc-software]
type: git_repo
path: ~/AFC-Klipper-Add-On
origin: https://github.com/ArmoredTurtle/AFC-Klipper-Add-On.git
managed_services: klipper moonraker
primary_branch: main
install_script: install-afc.sh



#[include moonraker-obico-update.cfg]

#[include octoeverywhere-system.cfg]

[include octoapp-system.cfg]
